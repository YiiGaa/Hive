/*######HPP Head start######*/
#ifndef   _THINK_HPP_
#define   _THINK_HPP_ 

#include <iostream>
#include <map>
#include "kernel/think/interface.hpp"

/*######HPP Head end######*/

/*######HPP Tail start######*/

#define START_MODULE(module, action, moduleParam, passParam, resultParam)  (think::CThink::thinkMap[module])->Start((int)action, (void*)&moduleParam, passParam, resultParam)

namespace think{
    using namespace std;
    class CThink {
        public:
            static map<string, CInterface*> thinkMap;
    };
}

#endif
/*######HPP Tail end######*/



/*######CPP Head start######*/
#include "kernel/think/think.hpp"

namespace think{
    map<string, CInterface*> CThink::thinkMap = {
/*######CPP Head end######*/

/*######CPP Tail start######*/
    };
}
/*######CPP Tail end######*/